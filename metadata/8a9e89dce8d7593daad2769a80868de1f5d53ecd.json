{"title":"JavaOne 2012 - Development Tools and Techniques","uid":8215426,"size":21411049836,"categoryP":"video","categoryS":"other","magnet":"?xt=urn:btih:8a9e89dce8d7593daad2769a80868de1f5d53ecd&amp;dn=JavaOne+2012+-+Development+Tools+and+Techniques&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":0,"leechers":4,"uploader":"jafar31","files":76,"time":1362330963,"description":"All videos H.264, 1,280 x 720\n* 101 Ways to Improve Java - Why Developer Participation Matters\n* A Common Development Framework - From JSP to GSP at CERN\n* A Deep Dive into Java Performance Analysis with Advanced Toolsets\n* Autosharding Enterprise to Social Gaming Applications with NoSQL and Couchbase\n* Behavior-Driven Development on the JVM - A State of the Union\n* Bringing Mylyn to NetBeans and OSGi Bridging Their Worlds\n* Building Content-Rich Java Apps in the Cloud or On-Premises with the Alfresco API\n* Building Native iPhone iPad Applications in Java CodeName One\n* Building Portable Java EE 6 Applications in Eclipse\n* Building Rich Client Applications with Eclipse 4\n* Cloud ALM - Connecting the Development Team to the New Deployment Destination\n* Code Inspection with the javac\n* Concurrency Without Pain in Pure Java\n* Concurrent Programming with the Disruptor\n* Cover Your Web and Mobile Applications with Integration Tests from Scratch\n* Cross-Build Injection Attacks - How Safe Is Your Java Build\n* Custom Declarative Refactoring\n* Custom Static Code Analysis\n* Delivering Bug-Free More Efficient Code for the Java Platform\n* Detecting Memory Leaks in Applications Spanning Multiple JVMs\n* Developing Best Practices for Using Hudson CI\n* Doing JSF Development in the NetBeans IDE\n* Dynamic Class Reloading in the Wild with Javeleon\n* Dynamic Instrumentation of Java Statically Defined Tracing\n* Eclipse 4.x - A Major Upgrade of Eclipse\n* Efficient Java Code and Project Organization\n* First Do No Harm - Deferred Checked Exception Handling Promotes Reliability\n* Gaining Market Advantage via Simplification and Differentiation with Java\n* How My Life Would Have Been So Much Better If We Had Used the NetBeans Platform\n* IDE 2.0 - How Much Can the IDE Predict You Will Write in the Next Few Seconds\n* Improve Your Java Code Functional-Style Now\n* Innovative Testing Techniques with Bytecode Instrumentation\n* Introduction to the Play Framework\n* JEDI - The Catalyst for Java Education\n* Java Application Design Practices to Avoid When Dealing with Sub-100-Millisecond SLAs\n* Java EE and Spring Framework Panel Discussion\n* Kinect Open Source Programming Secrets - Hacking with OpenNI NITE and Java\n* Large-Scale Automation with Jenkins\n* Lessons Learned in Building Enterprise and Desktop Applications with the NetBeans IDE\n* LinkedIn - A Social Network Built with Java Technologies and Agile Practices\n* Linking the Java Application Lifecycle with Hudson\n* Mixed-Language Development - Leveraging Native Code from Java\n* Modern Software Development Antipatterns\n* NetBeans.Next - The Roadmap Ahead\n* NetBeans Platform Panel Discussion\n* NetBeans Plug-in Development - JRebel Experience Report\n* OSGi for the Earthings - Meet the Eclipse Libra\n* Open Source Identity and Access Management Expert Panel\n* Oracle JDeveloper and Oracle ADF - What's New\n* Patterns for Modularity - What Modules Don t Want You to Know\n* Pimp Your Productivity with Git Gerrit Hudson and Mylyn\n* Project EASEL - Developing and Managing HTML5 in a Java World\n* Protecting Machine-Only Processed Data\n* Real-Life Load Testing - Up to Your Knees in Mud\n* Real-World Strategies for Continuous Delivery with Maven and Jenkins\n* Rediscovering Your Architecture Through Software Archaeology\n* Resource Management in Java - Tips Traps and Techniques\n* Right Ways to Climb the OpenJDK Source Tree\n* Runtime Class Reloading for Dummies\n* Server-Supported Large-Scale Development\n* Software Modularity - Paradoxes Principles and Architectures\n* Spearfish - Real-Time Java-Based Underwater Tracking of Large Numbers of Targets\n* Strategies for Testing Event-Driven Programs\n* Take Performance Tuning of Your Enterprise Java Applications to the Next Level\n* Taming the Spaghetti - Rich Web Applications with Errai\n* The Arquillian Universe - A Tour Around the Astrophysics Lab\n* The Future of ALM - Developing in the Social Code Graph\n* The Polyglot Java VM and Java Middleware\n* The Power of Java 7 NIO.2\n* The Social Developer\n* Thermostat - An Open Source Instrumentation Tool for the HotSpot JVM\n* Tooling Support for Enterprise Development\n* Tools for Java EE 7 - Evolution or Revolution\n* Uncovering Hidden Power Tools in the JDK\n* Why There's No Future in Java Futures","torrent":{"xt":"urn:btih:8a9e89dce8d7593daad2769a80868de1f5d53ecd","amp;dn":"JavaOne+2012+-+Development+Tools+and+Techniques","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"8a9e89dce8d7593daad2769a80868de1f5d53ecd","infoHashBuffer":{"type":"Buffer","data":[138,158,137,220,232,215,89,61,170,210,118,154,128,134,141,225,245,213,62,205]},"announce":[],"urlList":[]}}